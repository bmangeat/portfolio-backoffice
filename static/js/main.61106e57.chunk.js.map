{"version":3,"sources":["services/auth.service.js","components/login.component.js","components/register.component.js","services/auth-header.js","services/user.service.js","components/home.component.js","components/profile.component.js","components/board-user.component.js","services/project.service.js","components/board.admin.component.js","components/board.moderator.component.js","components/App.js","serviceWorker.js","index.js"],"names":["API_URL","username","password","axios","post","then","response","data","accessToken","localStorage","setItem","JSON","stringify","removeItem","email","parse","getItem","Login","history","useHistory","useForm","register","handleSubmit","useState","setUsername","setPassword","loginMessage","setLoginMessage","loading","setLoading","className","src","alt","onSubmit","AuthService","login","push","window","location","reload","err","message","toString","htmlFor","type","name","value","onChange","event","target","ref","required","disabled","role","Register","setEmail","registerMessage","setRegisterMessage","successful","setSuccessful","errors","maxLength","minLength","validate","isEmail","authHeader","user","get","headers","Home","useEffect","UserService","getPublicContent","setHomeContent","homeContent","Profile","getCurrentUser","currentUser","substring","substr","length","id","roles","map","index","key","UserBoard","getUserBoard","setUserContent","userContent","delete","AdminBoard","getAdminBoard","setAdminContent","ProjectService","getAllProjects","setProjects","adminContent","projects","console","log","project","description","icon","faEdit","onClick","deleteOneProject","faTrash","ModBoard","getModBoard","setModContent","modContent","App","setCurrentUser","setShowModeratorBoard","includes","setShowAdminBoard","showModeratorBoard","showAdminBoard","undefined","to","href","logout","exact","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.61106e57.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst API_URL = 'https://portfolio-api-bricemangeat.herokuapp.com/'\n\nclass AuthService {\n    login( username, password ) {\n        return axios\n            .post( API_URL + `api/auth/signin`, {\n                username,\n                password\n            } )\n            .then( response => {\n                if ( response.data.accessToken ) {\n                    localStorage.setItem( 'user', JSON.stringify( response.data ) )\n                }\n                return response.data\n            } )\n    }\n\n    logout() {\n        localStorage.removeItem( 'user' )\n    }\n\n    register( username, email, password ) {\n        return axios\n            .post( API_URL + `api/auth/signup`, {\n                username,\n                email,\n                password\n            } )\n\n    }\n\n    getCurrentUser() {\n        return JSON.parse( localStorage.getItem( 'user' ) )\n    }\n}\n\nexport default new AuthService();\n\n","import React, { useState } from \"react\";\nimport { useForm } from 'react-hook-form'\n\nimport { useHistory } from \"react-router-dom\";\n\n// Import services\nimport AuthService from \"../services/auth.service\";\n\nconst Login = () => {\n    const history = useHistory();\n    const { register, handleSubmit } = useForm()\n\n    const [ username, setUsername ] = useState( '' )\n    const [ password, setPassword ] = useState( '' )\n    const [ loginMessage, setLoginMessage ] = useState( '' )\n    const [ loading, setLoading ] = useState( false )\n\n    const onLogin = () => {\n        setLoading( true )\n\n        AuthService.login( username, password )\n            .then(\n                () => {\n                    history.push( '/profile' )\n                    window.location.reload()\n                },\n                ( err ) => {\n                    setLoading( false )\n                    setLoginMessage(\n                        (err.response &&\n                            err.response.data &&\n                            err.response.data.message) ||\n                        err.message ||\n                        err.toString()\n                    )\n                }\n            )\n    }\n\n\n    return (\n        <div className=\"col-md-12\">\n            <div className=\"card card-container\">\n                <img\n                    src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n                    alt=\"profile-img\"\n                    className=\"profile-img-card\"\n                />\n                <form onSubmit={handleSubmit( onLogin )}>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"username\">Username</label>\n                        <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            name=\"username\"\n                            value={username}\n                            onChange={( event ) => setUsername( event.target.value )}\n                            ref={register( { required: true } )}\n                        />\n\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input\n                            type=\"password\"\n                            className=\"form-control\"\n                            name=\"password\"\n                            value={password}\n                            onChange={( event ) => setPassword( event.target.value )}\n                            ref={register( { required: true } )}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <button\n                            type='submit'\n                            className=\"btn btn-primary btn-block\"\n                            disabled={loading}\n                        >\n                            {loading && (\n                                <span className=\"spinner-border spinner-border-sm\"/>\n                            )}\n                            <span>Login</span>\n                        </button>\n                    </div>\n                    {loginMessage && (\n                        <div className=\"form-group\">\n                            <div className=\"alert alert-danger\" role=\"alert\">\n                                {loginMessage}\n                            </div>\n                        </div>\n                    )}\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default Login\n","import React, { useState } from \"react\"\nimport { useForm } from 'react-hook-form'\nimport { isEmail } from \"validator\"\n\n// Import services\nimport AuthService from \"../services/auth.service\"\n\nconst Register = () => {\n    const [ username, setUsername ] = useState( '' )\n    const [ email, setEmail ] = useState( '' )\n    const [ password, setPassword ] = useState( '' )\n    const [ registerMessage, setRegisterMessage ] = useState( '' )\n    const [ successful, setSuccessful ] = useState( false )\n\n    const { register, handleSubmit, errors } = useForm()\n\n    const onRegister = () => {\n        AuthService.register( username, email, password )\n            .then(\n                ( response ) => {\n                    setSuccessful( true )\n                    setRegisterMessage( response.data.message )\n\n                },\n                ( err ) => {\n                    setSuccessful( false )\n                    setRegisterMessage(\n                        (err.response && err.response.data && err.response.data.message) ||\n                        err.message ||\n                        err.toString() )\n                }\n            )\n\n    }\n\n    return (\n        <div className=\"col-md-12\">\n            <div className=\"card card-container\">\n                <img\n                    src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n                    alt=\"profile-img\"\n                    className=\"profile-img-card\"\n                />\n                <form onSubmit={handleSubmit( onRegister )}>\n                    {!successful && (\n                        <div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"username\">Username</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    name=\"username\"\n                                    value={username}\n                                    onChange={( event ) => {\n                                        setUsername( event.target.value )\n                                    }}\n                                    ref={register( { required: true, maxLength: 20, minLength: 3 } )}\n                                />\n                                {\n                                    errors.username &&\n                                    <div className=\"alert alert-danger\" role=\"alert\">\n                                        The username must be between 3 and 20 characters.\n                                    </div>\n                                }\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"email\">Email</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    name=\"email\"\n                                    value={email}\n                                    onChange={( event ) => {\n                                        setEmail( event.target.value )\n                                    }}\n                                    ref={register( { required: true, validate: isEmail } )}\n                                />\n                                {\n                                    errors.email &&\n                                    <div className=\"alert alert-danger\" role=\"alert\">\n                                        This is not a valid email.\n                                    </div>\n                                }\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"password\">Password</label>\n                                <input\n                                    type=\"password\"\n                                    className=\"form-control\"\n                                    name=\"password\"\n                                    value={password}\n                                    onChange={( event ) => {\n                                        setPassword( event.target.value )\n                                    }}\n                                    ref={register( { required: true, maxLength: 40, minLength: 6 } )}\n                                />\n                                {\n                                    errors.password &&\n                                    <div className=\"alert alert-danger\" role=\"alert\">\n                                        The password must be between 6 and 40 characters.\n                                    </div>\n                                }\n                            </div>\n                            <div className=\"form-group\">\n                                <input className=\"btn btn-primary btn-block\" type=\"submit\" value=\"Sign up\"/>\n                            </div>\n                        </div>\n                    )}\n                    {registerMessage && (\n                        <div className=\"form-group\">\n                            <div\n                                className={\n                                    successful\n                                        ? \"alert alert-success\"\n                                        : \"alert alert-danger\"\n                                }\n                                role=\"alert\"\n                            >\n                                {registerMessage}\n                            </div>\n                        </div>\n                    )}\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default Register\n\n","export default authHeader => {\n    const user = JSON.parse(localStorage.getItem('user'))\n\n    if(user && user.accessToken) {\n        return { 'jwt-token': user.accessToken}\n    } else {\n        return {}\n    }\n}\n","import axios from 'axios'\nimport authHeader from './auth-header'\n\nconst API_URL = 'https://portfolio-api-bricemangeat.herokuapp.com/api/access/'\n\nclass UserService {\n    getPublicContent() {\n        return axios\n            .get( API_URL + `public` )\n    }\n\n    getUserBoard() {\n        return axios\n            .get( API_URL + `user`, { headers: authHeader() } )\n    }\n\n    getModBoard() {\n        return axios\n            .get( API_URL + `mod`, { headers: authHeader() } )\n    }\n\n    getAdminBoard() {\n        return axios\n            .get( API_URL + `admin`, { headers: authHeader() } )\n    }\n}\n\nexport default new UserService()\n","import React, { useEffect, useState } from \"react\"\n\nimport UserService from \"../services/user.service\"\n\nconst Home = () => {\n    useEffect(()=>{\n        UserService.getPublicContent()\n            .then(\n                response => {\n                    setHomeContent(response.data)\n                },\n                err => {\n                    setHomeContent((err.response && err.response.data) || err.message || err.toString())\n                }\n            )\n    })\n\n    const [homeContent, setHomeContent] = useState(\"\")\n\n    return (\n        <div className=\"container\">\n            <header className=\"jumbotron\">\n                <h3>{homeContent}</h3>\n            </header>\n        </div>\n    )\n}\n\nexport default Home\n","import React, { useState } from \"react\"\n\n// Import services\nimport AuthService from \"../services/auth.service\"\n\nconst Profile = () => {\n    const [ currentUser ] = useState( AuthService.getCurrentUser() )\n\n    return (\n        <div className=\"container\">\n            <header className=\"jumbotron\">\n                <h3>\n                    {currentUser.username} Profile\n                </h3>\n            </header>\n            <p>\n                <strong>Token : </strong>\n                {currentUser.accessToken.substring( 0, 20 )} ... {\" \"}\n                {currentUser.accessToken.substr( currentUser.accessToken.length - 20 )}\n            </p>\n\n            <p>\n                <strong>ID : </strong>\n                {currentUser.id}\n            </p>\n\n            <p>\n                <strong>Email : </strong>\n                {currentUser.email}\n            </p>\n            <strong>Authorities</strong>\n            <ul>\n                {currentUser.roles &&\n                currentUser.roles.map( ( role, index ) => <li key={index}>{role}</li> )}\n            </ul>\n        </div>\n    )\n}\n\nexport default Profile\n","import React, { useEffect, useState } from \"react\"\n\nimport UserService from \"../services/user.service\"\n\nconst UserBoard = () => {\n\n    useEffect( () => {\n        UserService.getUserBoard()\n            .then(\n                response => {\n                    setUserContent( response.data )\n                },\n                err => {\n                    setUserContent( (err.response && err.response.data && err.response.data) || err.message || err.toString() )\n                }\n            )\n    }, [] )\n\n    const [ userContent, setUserContent ] = useState(\"\")\n\n    return (\n        <div className=\"container\">\n            <header className=\"jumbotron\">\n                <h3>{userContent}</h3>\n            </header>\n        </div>\n    )\n\n}\n\nexport default UserBoard\n","import axios from 'axios'\nimport authHeader from './auth-header'\n\nconst API_URL = 'https://portfolio-api-bricemangeat.herokuapp.com/api/projects/'\n\nclass ProjectService {\n    getAllProjects() {\n        return axios\n            .get( API_URL )\n    }\n\n    getOneProject( id ) {\n        return axios\n            .get( API_URL + id )\n    }\n\n    deleteOneProject(id){\n        return axios\n            .delete(API_URL + id,\n                {\n                    headers: authHeader(),\n                })\n    }\n}\n\nexport default new ProjectService()\n","import React, { useEffect, useState } from \"react\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash, faEdit } from '@fortawesome/free-solid-svg-icons'\n\nimport UserService from \"../services/user.service\"\nimport ProjectService from '../services/project.service'\n\nconst AdminBoard = () => {\n\n    useEffect( () => {\n        UserService.getAdminBoard()\n            .then(\n                response => {\n                    setAdminContent( response.data )\n                },\n                err => {\n                    setAdminContent( (err.response && err.response.data && err.response.data) || err.message || err.toString() )\n                }\n            )\n        ProjectService.getAllProjects()\n            .then(\n                response => {\n                    setProjects( response.data )\n                },\n                err => {\n                    setProjects( (err.response && err.response.data && err.response.data) || err.message || err.toString )\n                }\n            )\n\n    }, [] )\n    const [ adminContent, setAdminContent ] = useState( \"\" )\n    const [ projects, setProjects ] = useState( [] )\n    console.log( projects )\n\n    return (\n        <div className=\"container\">\n            <header className=\"jumbotron\">\n                <h3>{adminContent}</h3>\n            </header>\n            <main>\n                <ul className='list-group'>\n                    {\n                        projects.map( project =>\n                            <li key={project.id} className='list-group-item d-flex'>\n                                <img className='p-2' src=\"http://placehold.it/256/163a63\" alt=\"\"/>\n                                <div className='p-2 align-self-center'>\n                                    <h4>{project.name}</h4>\n                                    <p className='list-group-item-text'>{project.description}</p>\n                                </div>\n\n                                <div className=' btn-group-vertical ml-auto p-2 align-self-center' role=\"group\">\n\n\n                                    <button type='button' className='btn btn-primary '>\n                                        <FontAwesomeIcon icon={faEdit}/>\n                                    </button>\n                                    <button type='button' className='btn btn-danger' onClick={ProjectService.deleteOneProject(project.id)}>\n                                        <FontAwesomeIcon icon={faTrash}/>\n                                    </button>\n                                </div>\n\n                            </li>\n                        )\n                    }\n\n                </ul>\n            </main>\n        </div>\n    )\n}\n\nexport default AdminBoard\n","import React, { useEffect, useState } from \"react\"\n\nimport UserService from \"../services/user.service\"\n\nconst ModBoard = () => {\n\n    useEffect(() => {\n        UserService.getModBoard()\n            .then(\n                response => {\n                    setModContent( response.data )\n                },\n                err => {\n                    setModContent( (err.response && err.response.data && err.response.data) || err.message || err.toString() )\n                }\n            )\n    }, [])\n    const [modContent, setModContent] = useState(\"\")\n\n    return(\n        <div className=\"container\">\n            <header className=\"jumbotron\">\n                <h3>{modContent}</h3>\n            </header>\n        </div>\n    )\n\n}\n\nexport default ModBoard\n","import React, { useState, useEffect } from \"react\"\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\"\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport \"../App.css\"\n\n// Import services\nimport AuthService from \"../services/auth.service\"\n\n// Import components\nimport Login from \"./login.component\"\nimport Register from \"./register.component\"\nimport Home from \"./home.component\"\nimport Profile from \"./profile.component\"\nimport UserBoard from \"./board-user.component\"\nimport AdminBoard from \"./board.admin.component\"\nimport ModBoard from \"./board.moderator.component\"\n\nconst App = () => {\n    useEffect( () => {\n        const user = AuthService.getCurrentUser()\n        if ( user ) {\n            setCurrentUser( user )\n            setShowModeratorBoard( user.roles.includes( \"ROLE_MODERATOR\" ) )\n            setShowAdminBoard( user.roles.includes( \"ROLE_ADMIN\" ) )\n        }\n    }, [] )\n\n    const [ showModeratorBoard, setShowModeratorBoard ] = useState( false )\n    const [ showAdminBoard, setShowAdminBoard ] = useState( false )\n    const [ currentUser, setCurrentUser ] = useState( undefined )\n\n\n    return (\n        <Router>\n            <div>\n                <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n                    <Link to={\"/\"} className=\"navbar-brand\"/>\n                    <div className=\"navbar-nav mr-auto\">\n                        <li className=\"nav-item\">\n                            <Link to={\"/home\"} className=\"nav-link\">\n                                Home\n                            </Link>\n                        </li>\n                        {showModeratorBoard && (\n                            <li className=\"nav-item\">\n                                <Link to={\"/mod\"} className=\"nav-link\">\n                                    Moderator Board\n                                </Link>\n                            </li>\n                        )}\n                        {showAdminBoard && (\n                            <li className=\"nav-item\">\n                                <Link to={\"/admin\"} className=\"nav-link\">\n                                    Admin Board\n                                </Link>\n                            </li>\n                        )}\n                        {currentUser && (\n                            <li className=\"nav-item\">\n                                <Link to={\"/user\"} className=\"nav-link\">\n                                    User\n                                </Link>\n                            </li>\n                        )}\n                    </div>\n\n                    {currentUser ? (\n                        <div className=\"navbar-nav ml-auto\">\n                            <li className=\"nav-item\">\n                                <Link to={\"/profile\"} className=\"nav-link\">\n                                    {currentUser.username}\n                                </Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <a href=\"/login\" className=\"nav-link\" onClick={AuthService.logout}>\n                                    LogOut\n                                </a>\n                            </li>\n                        </div>\n                    ) : (\n                        <div className=\"navbar-nav ml-auto\">\n                            <li className=\"nav-item\">\n                                <Link to={\"/login\"} className=\"nav-link\">\n                                    Login\n                                </Link>\n                            </li>\n\n                            <li className=\"nav-item\">\n                                <Link to={\"/register\"} className=\"nav-link\">\n                                    Sign Up\n                                </Link>\n                            </li>\n                        </div>\n                    )}\n                </nav>\n\n                <div className=\"container mt-3\">\n                    <Switch>\n                        <Route exact path={[ \"/\", \"/home\" ]} component={Home}/>\n                        <Route exact path=\"/login\" component={Login}/>\n                        <Route exact path=\"/register\" component={Register}/>\n                        <Route exact path=\"/profile\" component={Profile}/>\n                        <Route path=\"/user\" component={UserBoard}/>\n                        <Route path=\"/mod\" component={ModBoard}/>\n                        <Route path=\"/admin\" component={AdminBoard}/>\n                    </Switch>\n                </div>\n            </div>\n        </Router>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\n\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter>\n        <React.StrictMode>\n            <App/>\n        </React.StrictMode>\n    </BrowserRouter>,\n\n    document.getElementById( 'root' )\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}